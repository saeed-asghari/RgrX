{"ast":null,"code":"// import { Product } from '../product';\n// /* NgRx */\n// import { Action } from '@ngrx/store';\n// export enum ProductActionTypes {\n//   ToggleProductCode = '[Product] Toggle Product Code',\n//   SetCurrentProduct = '[Product] Set Current Product',\n//   ClearCurrentProduct = '[Product] Clear Current Product',\n//   InitializeCurrentProduct = '[Product] Initialize Current Product',\n//   Load = '[Product] Load',\n//   LoadSuccess = '[Product] Load Success',\n//   LoadFail = '[Product] Load Fail',\n//   UpdateProduct = '[Product] Update Product',\n//   UpdateProductSuccess = '[Product] Update Product Success',\n//   UpdateProductFail = '[Product] Update Product Fail',\n//   CreateProduct = '[Product] Create Product',\n//   CreateProductSuccess = '[Product] Create Product Success',\n//   CreateProductFail = '[Product] Create Product Fail',\n//   DeleteProduct = '[Product] Delete Product',\n//   DeleteProductSuccess = '[Product] Delete Product Success',\n//   DeleteProductFail = '[Product] Delete Product Fail'\n// }\n// // Action Creators\n// export class ToggleProductCode implements Action {\n//   readonly type = ProductActionTypes.ToggleProductCode;\n//   constructor(public payload: boolean) { }\n// }\n// export class SetCurrentProduct implements Action {\n//   readonly type = ProductActionTypes.SetCurrentProduct;\n//   constructor(public payload: Product) { }\n// }\n// export class ClearCurrentProduct implements Action {\n//   readonly type = ProductActionTypes.ClearCurrentProduct;\n// }\n// export class InitializeCurrentProduct implements Action {\n//   readonly type = ProductActionTypes.InitializeCurrentProduct;\n// }\n// export class Load implements Action {\n//   readonly type = ProductActionTypes.Load;\n// }\n// export class LoadSuccess implements Action {\n//   readonly type = ProductActionTypes.LoadSuccess;\n//   constructor(public payload: Product[]) { }\n// }\n// export class LoadFail implements Action {\n//   readonly type = ProductActionTypes.LoadFail;\n//   constructor(public payload: string) { }\n// }\n// export class UpdateProduct implements Action {\n//   readonly type = ProductActionTypes.UpdateProduct;\n//   constructor(public payload: Product) { }\n// }\n// export class UpdateProductSuccess implements Action {\n//   readonly type = ProductActionTypes.UpdateProductSuccess;\n//   constructor(public payload: Product) { }\n// }\n// export class UpdateProductFail implements Action {\n//   readonly type = ProductActionTypes.UpdateProductFail;\n//   constructor(public payload: string) { }\n// }\n// export class CreateProduct implements Action {\n//   readonly type = ProductActionTypes.CreateProduct;\n//   constructor(public payload: Product) { }\n// }\n// export class CreateProductSuccess implements Action {\n//   readonly type = ProductActionTypes.CreateProductSuccess;\n//   constructor(public payload: Product) { }\n// }\n// export class CreateProductFail implements Action {\n//   readonly type = ProductActionTypes.CreateProductFail;\n//   constructor(public payload: string) { }\n// }\n// export class DeleteProduct implements Action {\n//   readonly type = ProductActionTypes.DeleteProduct;\n//   constructor(public payload: number) { }\n// }\n// export class DeleteProductSuccess implements Action {\n//   readonly type = ProductActionTypes.DeleteProductSuccess;\n//   constructor(public payload: number) { }\n// }\n// export class DeleteProductFail implements Action {\n//   readonly type = ProductActionTypes.DeleteProductFail;\n//   constructor(public payload: string) { }\n// }\n// // Union the valid types\n// export type ProductActions = ToggleProductCode\n//   | SetCurrentProduct\n//   | ClearCurrentProduct\n//   | InitializeCurrentProduct\n//   | Load\n//   | LoadSuccess\n//   | LoadFail\n//   | UpdateProduct\n//   | UpdateProductSuccess\n//   | UpdateProductFail\n//   | CreateProduct\n//   | CreateProductSuccess\n//   | CreateProductFail\n//   | DeleteProduct\n//   | DeleteProductSuccess\n//   | DeleteProductFail;","map":null,"metadata":{},"sourceType":"script"}