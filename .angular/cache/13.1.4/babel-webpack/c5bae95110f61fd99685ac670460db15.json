{"ast":null,"code":"/* NgRx */\nimport { createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as ProductActions from './product.actions';\nconst initialState = {\n  showProductCode: true,\n  currentProduct: null,\n  products: [],\n  error: ''\n}; // Selector functions\n\nconst getProductFeatureState = createFeatureSelector('products');\nexport const getShowProductCode = createSelector(getProductFeatureState, state => state.showProductCode);\nexport const getCurrentProduct = createSelector(getProductFeatureState, state => state.currentProduct);\nexport const getProducts = createSelector(getProductFeatureState, state => state.products);\nexport const getError = createSelector(getProductFeatureState, state => state.error);\nexport const productReducer = createReducer(initialState, on(ProductActions.toggleProductCode, state => {\n  return Object.assign(Object.assign({}, state), {\n    showProductCode: !state.showProductCode\n  });\n}), on(ProductActions.setCurrentProduct, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    currentProduct: action.product\n  });\n}), on(ProductActions.clearCurrentProduct, state => {\n  return Object.assign(Object.assign({}, state), {\n    currentProduct: null\n  });\n}), on(ProductActions.initializeCurrentProduct, state => {\n  return Object.assign(Object.assign({}, state), {\n    currentProduct: {\n      id: 0,\n      productName: '',\n      productCode: 'New',\n      description: '',\n      starRating: 0\n    }\n  });\n}), on(ProductActions.loadProductsSuccess, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    products: action.products,\n    error: ''\n  });\n}), on(ProductActions.loadProductsFailure, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    products: [],\n    error: action.error\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}